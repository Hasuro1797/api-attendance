// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(cuid())
  name       String
  lastName   String
  email      String       @unique
  phone      String?
  online     Boolean?     @default(false)
  password   String
  department String
  role       Role         @default(USER)
  attendance Attendance[]
  modality   Modality     @default(PRESENTIAL)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model RevokedToken {
  id        String   @id @default(uuid())
  token     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([token])
}

model Attendance {
  id        Int      @id @default(autoincrement())
  userId    String
  checkIn   String?
  checkOut  String?
  status    Status   @default(PRESENT)
  createdAt DateTime @default(now())
  modality  Modality
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model NetWorkRule {
  id        Int      @id @default(autoincrement())
  name      String
  ipStart   String
  ipEnd     String
  modality  Modality
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Config {
  id           Int      @id @default(autoincrement())
  startTime    String
  endTime      String
  toleranceMin Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  updateBy     String
}

model AttendanceLog {
  id         Int      @id @default(autoincrement())
  executedAt DateTime @default(now())
  created    Int
  updated    Int
  status     String
  error      String?
}

enum Role {
  USER
  ADMIN
}

enum Modality {
  PRESENTIAL
  REMOTE
}

enum Status {
  PRESENT
  LATE
  ABSENT
}
